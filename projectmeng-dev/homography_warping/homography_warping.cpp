#include <opencv2/imgproc.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/core.hpp>
#include <iostream>
#include <cmath>
#include <iomanip> // setprecision
#include "../utils.h"	// Collection of functions I build...

// #define BAR_SIZE 100

using namespace cv;
using namespace std;

double g_rotate_range[] = { -1.57079632679490, -1.53909632679490, -1.50739632679490, -1.47569632679490, -1.44399632679490, -1.41229632679490,
-1.38059632679490, -1.34889632679490, -1.31719632679490, -1.28549632679490, -1.25379632679490, -1.22209632679490, -1.19039632679490, -1.15869632679490, 
-1.12699632679490, -1.09529632679490, -1.06359632679490, -1.03189632679490, -1.00019632679490, -0.968496326794897, -0.936796326794897, -0.905096326794897, 
-0.873396326794897, -0.841696326794897, -0.809996326794897, -0.778296326794897, -0.746596326794897, -0.714896326794897, -0.683196326794897, 
-0.651496326794897, -0.619796326794897, -0.588096326794897, -0.556396326794897, -0.524696326794897, -0.492996326794897, -0.461296326794897, 
-0.429596326794897, -0.397896326794897, -0.366196326794897, -0.334496326794897, -0.302796326794897, -0.271096326794897, -0.239396326794897, 
-0.207696326794897, -0.175996326794897, -0.144296326794897, -0.112596326794897, -0.0808963267948966, -0.0491963267948967, -0.0174963267948967, 
0.0142036732051036, 0.0459036732051037, 0.0776036732051035, 0.109303673205104, 0.141003673205104, 0.172703673205104, 0.204403673205104, 0.236103673205104, 
0.267803673205104, 0.299503673205104, 0.331203673205104, 0.362903673205104, 0.394603673205104, 0.426303673205104, 0.458003673205104, 0.489703673205104, 
0.521403673205104, 0.553103673205104, 0.584803673205104, 0.616503673205104, 0.648203673205104, 0.679903673205104, 0.711603673205104, 0.743303673205104, 
0.775003673205104, 0.806703673205104, 0.838403673205104, 0.870103673205104, 0.901803673205104, 0.933503673205104, 0.965203673205104, 0.996903673205104, 
1.02860367320510, 1.06030367320510, 1.09200367320510, 1.12370367320510, 1.15540367320510, 1.18710367320510, 1.21880367320510, 1.25050367320510, 
1.28220367320510, 1.31390367320510, 1.34560367320510, 1.37730367320510, 1.40900367320510, 1.44070367320510, 1.47240367320510, 1.50410367320510, 
1.53580367320510, 1.56750367320510 };

double g_xrotate_slide;
double g_yrotate_slide;
double g_zrotate_slide;


int main(void)
{
	// Load an image
	Mat image = imread_limitedWidth("../../../sample images/result_0001.png", 1000);
	Mat image_out;
	String winName = "homography_warping";
	
	// Rotate the axis of image according to the parameter rotateMat_t
	rotateMat_t axisRotate;
	axisRotate.f = 4.771474878444084e+02;
	axisRotate.centerX = image.cols / 2;
	axisRotate.centerY = image.rows / 2;
	axisRotate.xrotate = 0.188683274687147;
	axisRotate.yrotate = -0.144974545422454;
	axisRotate.zrotate = 0.5900159739991925;

	cv::Mat H;
	rotate_mat_axis(image, image_out, H, axisRotate);

	cout << H << endl;

	// Show the result
	namedWindow(winName, WINDOW_NORMAL);
	imshow(winName, image_out);
	cvWaitKey(0);

	return 0;
}
